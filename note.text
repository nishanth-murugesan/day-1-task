HTTP stands for hypertext transfer protocol & it is used in client-server communication
By using HTTP user sends the request to the server & the server sends the response to the user
There are several stages of development of HTTP but we will focus mainly on HTTP/1.1 which was created in 1997 &
 the new one is HTTP/2 which was created in 2015.

 HTTP/1.1:-
      
      For better understanding, let’s assume the situation when you make a request to the server for the guvi.html page & server responds to you as a resource guvi.html page.
       before sending the request and the response there is a TCP connection established between client & server.
       again you make a request to the server for image img.jpg & the server gives a response as an image img.jpg
       the connection was not lost here after the first request because we add a keep-alive header which is the part of the request so there is an open connection between the server & client
       there is a persistent connection which means several requests & responses are merged in a single connection
       
HTTP/2:-

       HTTP/2 was developed over the SPDY protocol
        HTTP/2 works on the binary framing layer instead of textual that converts all the messages in binary format
        it works on fully multiplexed that is one TCP connection is used for multiple requests
        HTTP/2 uses HPACK which is used to split data from header. it compresses the header
        The server sends all the other files like CSS & JS without the request of the client using the PUSH frame



         Objects And Its Internal Representation In JavaScript:-

         Objects, in JavaScript, is it’s most important data-type and forms the building blocks for modern JavaScript
         These objects are quite different from JavaScript’s primitive data-types(Number, String, Boolean, null, undefined and symbol) 
         in the sense that while these primitive data-types all store a single value each (depending on their types).
         Objects are more complex and each object may contain any combination of these primitive data-types as well as reference data-types.
An object, is a reference data type. Variables that are assigned a reference value are given a reference or a pointer to that value
That reference or pointer points to the location in memory where the object is stored. The variables don’t actually store the value
Loosely speaking, objects in JavaScript may be defined as an unordered collection of 
related data, of primitive or reference types, in the form of “key: value” pairs
These keys can be variables or functions and are called properties and methods, respectively, in the context of an object
For Eg. If your object is a student, it will have properties like name, age, address, id, etc and methods like updateAddress, updateNam, etc